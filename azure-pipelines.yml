# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

#pool:
#  vmImage: 'ubuntu-latest'

steps:
- task: FtpUpload@2
  inputs:
    credentialsOption: 'inputs'
    serverUrl: 'ftp://92.53.96.186'
    username: 'lombard55'
    password: '1989Ultra'
    rootDirectory: '$(Build.SourcesDirectory)'
    filePatterns: |
      **/*.py
      **/*.html
      **/*.txt
    remoteDirectory: '/azuretest/upload/'
    enableUtf8: true
    clean: true
    preservePaths: true
    trustSSL: false

- task: SSH@0
  inputs:
    sshEndpoint: 'lombard55'
    runOptions: 'inline'
    inline: |
      cd /home/l/lombard55/azuretest/public_html
      wget https://files.pythonhosted.org/packages/53/c0/c7819f0bb2cf83e1b4b0d96c901b85191f598a7b534d297c2ef6dc80e2d3/virtualenv-16.6.0.tar.gz
      tar xvfz virtualenv-16.6.0.tar.gz
      python3 virtualenv-16.6.0/virtualenv.py myenv
      source /home/l/lombard55/azuretest/public_html/myenv/bin/activate
    readyTimeout: '20000'

- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- script: |
    python -m pip install --upgrade pip setuptools wheel
    pip install -r requirements.txt
    pip install unittest-xml-reporting
  displayName: 'Install prerequisites'
